% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cv.svyglm.R
\name{cv.svyglm}
\alias{cv.svyglm}
\title{CV for `svyglm` objects}
\usage{
cv.svyglm(glm_object, nfolds = 5)
}
\arguments{
\item{glm_object}{Name of a `svyglm` object created from the `survey` package}

\item{nfolds}{Number of folds to be used during cross validation, defaults to
5}
}
\description{
Wrapper function which takes a `svyglm` object
(which itself contains a `svydesign` object)
and passes it through `cv.svydesign()` to `cv.svy()`.
Chooses linear or logistic regression based on the `svyglm` object's family.
}
\examples{
# Calculate CV MSE and its SE under one `svyglm` model
# for a stratified sample and a one-stage cluster sample,
# from the `survey` package
data("api", package = "survey")
# stratified sample
dstrat <- svydesign(id = ~1, strata = ~stype, weights = ~pw, data = apistrat,
                    fpc = ~fpc)
glmstrat <- svyglm(api00 ~ ell+meals+mobility, design = dstrat)
cv.svyglm(glmstrat, nfolds = 5)
# one-stage cluster sample
dclus1 <- svydesign(id = ~dnum, weights = ~pw, data = apiclus1, fpc = ~fpc)
glmclus1 <- svyglm(api00 ~ ell+meals+mobility, design = dclus1)
cv.svyglm(glmclus1, nfolds = 5)

# Calculate CV MSE and its SE under one `svyglm` model
# for a stratified cluster sample with clusters nested within strata
data(NSFG_data)
library(splines)
NSFG.svydes <- svydesign(id = ~SECU, strata = ~strata, nest = TRUE,
                         weights = ~wgt, data = NSFG_data)
NSFG.svyglm <- svyglm(income ~ ns(age, df = 3), design = NSFG.svydes)
cv.svyglm(glm_object = NSFG.svyglm, nfolds = 4)
}
